trigger:
- 'release-pipeline'

variables:
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build Web App'
  jobs:
  - job: 'Build'
    displayName: 'Build Job'
    pool:
      vmImage: 'ubuntu-18.04'
      demands:
      - npm
    
    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '3.1.300'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .Net Version $(otnetSdkVersion)' 
      inputs:
        version: $(dotnetSdkversion)

    - task: Npm@1
      displayName: 'Run npn install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'

    - task: gulp@1
      displayName: 'Run gulp task'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId),$(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore Dependencies'
      inputs: 
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build Project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguements: '--no-restore --configuration $(buildConfiguration'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the Project'
      inputs: 
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguements: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact at location "$(Build.ArtifactStagingDirectory)/$(buildConfiguration)"'
      inputs: 
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        artifactName: 'WebApp'

